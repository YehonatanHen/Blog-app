{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonat\\\\Blog-app\\\\src\\\\components\\\\blog-components\\\\post.jsx\";\nimport React from 'react';\nimport { Card, Accordion, Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Like from './post-components/like';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar key = 0;\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deletePost = () => {\n      fetch(`/posts/${this.props._id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 404 || res.status === 500) {\n          alert(res.statusText);\n        } else {\n          alert(`Post ${this.props.title} deleted successfully.`);\n          window.location.reload(false);\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    };\n\n    this.redirectToUpdatePost = () => {\n      this.setState({\n        redirectToUpdate: true\n      });\n    };\n\n    this.userButtons = () => {\n      if (sessionStorage.getItem('_id') === this.props.author) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"sm\",\n            onClick: this.redirectToUpdatePost,\n            children: \"Update Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            size: \"sm\",\n            onClick: this.deletePost,\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true);\n      }\n\n      return null;\n    };\n\n    this.key = 0;\n    this.state = {\n      redirectToUpdate: false\n    };\n    this.userButtons = this.userButtons.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.redirectToUpdatePost = this.redirectToUpdatePost.bind(this);\n  }\n\n  render() {\n    if (this.state.redirectToUpdate) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/updatePost',\n        state: {\n          _id: this.props._id,\n          body: this.props.body,\n          title: this.props.title\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n            className: \"post-btn\",\n            eventKey: (++key).toString(),\n            children: this.props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: key.toString(),\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.props.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-sub-btns\",\n              children: [this.userButtons(), /*#__PURE__*/_jsxDEV(Like, {\n                _id: this.props._id,\n                author: this.props.author,\n                totalLikes: this.props.likes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\n;\nexport default Post;","map":{"version":3,"sources":["C:/Users/yonat/Blog-app/src/components/blog-components/post.jsx"],"names":["React","Card","Accordion","Button","Redirect","Like","key","Post","Component","constructor","props","deletePost","fetch","_id","method","headers","then","res","status","alert","statusText","title","window","location","reload","catch","error","redirectToUpdatePost","setState","redirectToUpdate","userButtons","sessionStorage","getItem","author","state","bind","render","pathname","body","toString","likes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Accordion, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Like from './post-components/like'\r\nvar key = 0\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.key = 0\r\n        this.state = {\r\n            redirectToUpdate: false\r\n        }\r\n\r\n        this.userButtons = this.userButtons.bind(this)\r\n        this.deletePost = this.deletePost.bind(this)\r\n        this.redirectToUpdatePost = this.redirectToUpdatePost.bind(this)\r\n    }\r\n\r\n    deletePost = () => {\r\n        fetch(`/posts/${this.props._id}`, {\r\n            method: 'DELETE',\r\n            headers: {'Content-Type':'application/json'}\r\n        })\r\n        .then((res) => {\r\n            if( res.status === 404 || res.status === 500) {\r\n                alert(res.statusText)\r\n            }\r\n            else {\r\n                alert(`Post ${this.props.title} deleted successfully.`)\r\n                window.location.reload(false)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(error)\r\n        })\r\n    }\r\n\r\n    redirectToUpdatePost = () => {\r\n        this.setState({\r\n            redirectToUpdate: true\r\n        })\r\n    }\r\n\r\n    userButtons = () => {\r\n        if (sessionStorage.getItem('_id') === (this.props.author)) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"secondary\" size=\"sm\" onClick={this.redirectToUpdatePost}>Update Post</Button>\r\n                    <Button variant=\"danger\" size=\"sm\"  onClick={this.deletePost}>Delete Post</Button>\r\n                </>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirectToUpdate)\r\n            return (\r\n            <Redirect to={{\r\n                pathname: '/updatePost',\r\n                state: {  \r\n                _id: this.props._id,\r\n                body: this.props.body, \r\n                title: this.props.title }\r\n            }}/>\r\n            )\r\n        return (\r\n            <>\r\n            <Card className=\"post-card\">\r\n            <Card.Header>\r\n                <Accordion.Toggle className=\"post-btn\" eventKey={(++key).toString()}>\r\n                    {this.props.title}\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n                <Accordion.Collapse eventKey={(key).toString()}>\r\n                    <Card.Body>\r\n                        <p>\r\n                            {this.props.body}\r\n                        </p>\r\n                        <br/>\r\n                        <div className=\"post-sub-btns\">\r\n                            {this.userButtons()}\r\n                            <Like \r\n                                _id = {this.props._id}  \r\n                                author = {this.props.author}\r\n                                totalLikes = {this.props.likes}\r\n                            />\r\n                        </div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            </>\r\n        );\r\n    };\r\n };\r\n\r\n export default Post\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}