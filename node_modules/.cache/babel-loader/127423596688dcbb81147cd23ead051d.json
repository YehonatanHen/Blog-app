{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonat\\\\Blog-app\\\\src\\\\components\\\\update-components\\\\updateUser.jsx\";\nimport React from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handlePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handlePasswordConfirmation = event => {\n      this.setState({\n        passwordConfirmation: event.target.value\n      });\n    };\n\n    this.handleEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      fetch('/update-user', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"userID\": sessionStorage.getItem(\"_id\"),\n          \"username\": this.state.username,\n          \"email\": this.state.email,\n          \"password\": this.state.password\n        })\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n\n        if (response.status === 400) {\n          console.log(response);\n          alert(response.status);\n        } else if (this.state.password !== this.state.passwordConfirmation) {\n          alert(\"Passwords don't match!\");\n          window.location.reload(false); //Refreshing page\n        } else {\n          sessionStorage.setItem(\"username\", response.username);\n          this.setState({\n            redirect: true\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        alert(\"An error occured!\");\n      });\n    };\n\n    this.state = {\n      redirect: false,\n      username: sessionStorage.getItem(\"username\"),\n      password: '',\n      passwordConfirmation: '',\n      email: ''\n    };\n    this.handleUsername = this.handleUsername.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handlePasswordConfirmation = this.handlePasswordConfirmation.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    if (this.state.redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/blog'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);else return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Update user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"user-username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: this.state.username,\n            onChange: this.handleUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"user-email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: this.state.email,\n            onChange: this.handleEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"user-password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: this.state.password,\n            onChange: this.handlePassword,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: this.state.passwordConfirmation,\n            onChange: this.handlePasswordConfirmation,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default UpdateUser;","map":{"version":3,"sources":["C:/Users/yonat/Blog-app/src/components/update-components/updateUser.jsx"],"names":["React","Form","Button","Container","Redirect","UpdateUser","Component","constructor","props","handleUsername","event","setState","username","target","value","handlePassword","password","handlePasswordConfirmation","passwordConfirmation","handleEmail","email","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","sessionStorage","getItem","state","then","response","json","console","log","status","alert","window","location","reload","setItem","redirect","catch","error","bind","render","pathname"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass UpdateUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            username: sessionStorage.getItem(\"username\"),\r\n            password: '',\r\n            passwordConfirmation: '',\r\n            email: ''\r\n        }\r\n\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handlePasswordConfirmation = this.handlePasswordConfirmation.bind(this)\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleUsername = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    handlePassword = (event) => {\r\n        this.setState({password: event.target.value}); \r\n    }\r\n\r\n    handlePasswordConfirmation = (event) => {\r\n        this.setState({passwordConfirmation: event.target.value}); \r\n    }\r\n\r\n    handleEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/update-user', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"userID\": sessionStorage.getItem(\"_id\"), \r\n                \"username\": this.state.username,\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            if(response.status === 400) {\r\n                console.log(response)\r\n                alert(response.status)\r\n            }\r\n            else if (this.state.password !== this.state.passwordConfirmation) {\r\n                alert(\"Passwords don't match!\")\r\n                window.location.reload(false); //Refreshing page\r\n            }\r\n            else {\r\n                sessionStorage.setItem(\"username\", response.username)              \r\n                this.setState({ redirect: true })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n    \r\n\r\n    render () {\r\n        if (this.state.redirect)\r\n            return (\r\n            <Redirect to={{\r\n                pathname: '/blog',\r\n            }}/>\r\n            )\r\n        else return (\r\n            <Container>\r\n                <h1 className=\"text-center\">Update user</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"user-username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.username} onChange={this.handleUsername} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-email\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" value={this.state.email} onChange={this.handleEmail} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.password} onChange={this.handlePassword} required/>\r\n                        <Form.Label>Confirm password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.passwordConfirmation} onChange={this.handlePasswordConfirmation} required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button >\r\n                </Form>\r\n            </Container>\r\n        );\r\n    };\r\n};\r\n\r\nexport default UpdateUser\r\n"]},"metadata":{},"sourceType":"module"}